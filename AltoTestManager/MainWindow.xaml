<Window x:Name="wm" x:Class="AltoTestManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:AltoTestManager.Converters"
        xmlns:local="clr-namespace:AltoTestManager"
        Title="Test Manager" Height="600" Width="700"
        xmlns:ie="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" Icon="img/favicon.ico">
    <ie:Interaction.Triggers>
        <ie:EventTrigger EventName="Closing">
            <ie:InvokeCommandAction Command="{Binding CommandSaveJson}" />
        </ie:EventTrigger>
    </ie:Interaction.Triggers>
    <Window.Resources>
        <local:SelectedProjectToEnabledConverter x:Key="SelectedProjectToEnabledConverter"/>
        <local:ImageNullConverter x:Key="ImageNullConverter"/>
        <local:StringToImageSourceConverter x:Key="StringToImageSourceConverter" />
        <conv:NotificationTypeToBorderColorConverter x:Key="NotificationTypeToBorderColorConverter" />
        <conv:IsModeUpdateToButtonContentConverter x:Key="IsModeUpdateToButtonContentConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="V" Command="{Binding CommandGetImageFromClipboard}" CommandParameter="{x:Null}">

        </KeyBinding>
    </Window.InputBindings>
    <TabControl>
        <TabItem Header="Test Senaryoları">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition>

                    </ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <DockPanel LastChildFill="True">
                        <Button Command="{Binding CommandExportTestProjectWord}" 
                                CommandParameter="{Binding SelectedProject}" DockPanel.Dock="Right" Height="25" Content="Worde Çıkart" />
                        <Border Grid.Row="1" Padding="2" Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="1">
                            <ComboBox  SelectedItem="{Binding SelectedProject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding TestProjects}" DisplayMemberPath="Caption" ></ComboBox>
                        </Border>
                    </DockPanel>

                    <ListView Grid.Row="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="True" SelectedItem="{Binding SelectedTestCase, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Wheat" x:Name="testCaseListView" ItemsSource="{Binding SelectedProject.TestCases}">
                        <ie:Interaction.Triggers>
                            <ie:EventTrigger EventName="SelectionChanged">
                                <ie:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  CommandParameter="{Binding ElementName=listv}"/>
                            </ie:EventTrigger>
                        </ie:Interaction.Triggers>
                        <ListView.Template>
                            <ControlTemplate>
                                <ScrollViewer>
                                    <ItemsPresenter></ItemsPresenter>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ListView.Template>

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition Width="*" />                                        
                                        <ColumnDefinition Width="Auto" />

                                        <ColumnDefinition Width="35" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0" Height="35" Background="LightGray" BorderBrush="Gray" BorderThickness="1">
                                        <Border DockPanel.Dock="Left" BorderBrush="Black" BorderThickness="1" >
                                            <Button Cursor="Hand" Command="{Binding  ElementName=wm,Path=DataContext.CommandChangeTestCase}" CommandParameter="{Binding}">
                                                <Image x:Name="img" Width="30" Height="30" Stretch="Uniform"  Cursor="Hand">
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding CaseStatus}" Value="{x:Static local:TestCaseStatus.Success}">
                                                                    <Setter Property="Source" Value="img/tickmark.png"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding CaseStatus}" Value="{x:Static local:TestCaseStatus.Failed}">
                                                                    <Setter Property="Source" Value="img/close.png"/>
                                                                    <Setter Property="Stretch" Value="Uniform" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>
                                        </Border>
                                    </Border>
                                    <TextBlock HorizontalAlignment="Stretch" Grid.Column="1" TextWrapping="Wrap" Padding="5,0,0,0" Text="{Binding Description}">
                                    </TextBlock>
                                    <Button Grid.Column="2" HorizontalAlignment="Right" Content="Güncelle" Command="{Binding ElementName=wm, Path=DataContext.CommandTestCaseSelectedChanged}"  CommandParameter="{Binding}"/>

                                    <Button Grid.Column="3" HorizontalAlignment="Right" Width="30" Content="Sil" Command="{Binding ElementName=wm, Path=DataContext.CommandDeleteSelectedTestCase}" CommandParameter="{Binding}"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <GroupBox IsEnabled="{Binding SelectedProject, Converter={StaticResource SelectedProjectToEnabledConverter}}" VerticalAlignment="Bottom" Grid.Row="3" Header="Test Senaryosu Ekle">
                        <StackPanel>
                            <DockPanel Margin="2,5,5,5" LastChildFill="True">
                                <Label Content="Description:" FontWeight="Bold"></Label>
                                <TextBox Text="{Binding SelectedTestCaseToUpdate.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Stretch" x:Name="txtCaseDesc">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding CommandAddNewTestCase}" CommandParameter="{Binding ElementName=txtCaseDesc, Path=Text}">
                                        </KeyBinding>
                                    </TextBox.InputBindings>
                                </TextBox>
                            </DockPanel>
                            <DockPanel>
                                <Button Command="{Binding ElementName=wm, Path=DataContext.CommandAddNewTestCase}" CommandParameter="{Binding ElementName=txtCaseDesc, Path=Text}"  DockPanel.Dock="Right" x:Name="btnModeNew"  Height="30"  Margin="0,0,5,5" HorizontalAlignment="Right"  Content="Ekle" >
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsModeUpdate}" Value="False">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsModeUpdate}" Value="True">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <Button Command="{Binding ElementName=wm, Path=DataContext.CommandChangeUpdateMode}" CommandParameter="{Binding ElementName=testCaseListView, Path=SelectedItem}"  DockPanel.Dock="Right" x:Name="btnAddNewCase"  Height="30"  Margin="0,0,5,5" HorizontalAlignment="Right"  Content="Yeni Senaryo" >
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsModeUpdate}" Value="True">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsModeUpdate}" Value="False">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DockPanel>
                        </StackPanel>
                    </GroupBox>
                    <StatusBar BorderThickness="1" BorderBrush="{Binding Notification.Type, Converter={StaticResource NotificationTypeToBorderColorConverter}, NotifyOnTargetUpdated=True}" Grid.Row="4" Height="30" Background="White">
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Red" Text="{Binding Notification.Text, NotifyOnTargetUpdated=True}" >
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:5" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>
                        <StatusBar.Triggers>
                            <EventTrigger  RoutedEvent="Binding.TargetUpdated">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
        Storyboard.TargetProperty="BorderThickness"
        Duration="0:0:7" FillBehavior="HoldEnd" From="1,1,1,1" To="0,0,0,0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </StatusBar.Triggers>
                    </StatusBar>
                </Grid>
                <Grid Margin="10,0,0,0" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="30" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Margin="0,5,10,5" Background="Transparent" BorderBrush="Black" BorderThickness="1">
                        <Image x:Name="imgElement" Stretch="Fill">
                            <Image.Source>
                                <Binding Path="SelectedImagePath"  Converter="{StaticResource StringToImageSourceConverter}" TargetNullValue="{x:Null}">
                                </Binding>
                            </Image.Source>
                        </Image>
                    </Border>
                    <Button Grid.Row="1" Command="{Binding CommandGetImageFromClipboard}" CommandParameter="{x:Null}" Content="Görseli Panodan Al" />
                    <GroupBox  Grid.Row="2" Header="Görseller">
                        <ListView x:Name="listv"  Margin="0,5,4,0"  ScrollViewer.CanContentScroll="True" SelectedItem="{Binding SelectedImagePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Wheat"  ItemsSource="{Binding SelectedTestCase.ImagePaths}">

                            <ListView.Template>
                                <ControlTemplate>
                                    <ScrollViewer>
                                        <ItemsPresenter></ItemsPresenter>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListView.Template>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Background="Transparent">
                                        <Grid.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick"
                                                          Command="{Binding ElementName=wm, Path=DataContext.CommandShowLargeImageWindow}"
                                                          CommandParameter="{Binding}"></MouseBinding>
                                        </Grid.InputBindings>
                                        <Border Padding="3" HorizontalAlignment="Stretch" BorderBrush="LightBlue" BorderThickness="1">
                                            <DockPanel LastChildFill="True">
                                                <Button Margin="0,0,5,0" VerticalAlignment="Center" Content="Sil" HorizontalAlignment="Right" Width="20" Height="20" Command="{Binding ElementName=wm, Path=DataContext.CommandDeleteSelectedImagePath}" CommandParameter="{Binding}" />
                                                <Button Margin="0,0,5,0" VerticalAlignment="Center" Content="Kopyala" HorizontalAlignment="Right" Width="50" Height="20" Command="{Binding ElementName=wm, Path=DataContext.CommandCopyImageToClipboard}" CommandParameter="{Binding}" />

                                                <Border VerticalAlignment="Center">
                                                    <TextBlock   VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="Left" Text="{Binding}" Height="20" ></TextBlock>
                                                </Border>
                                            </DockPanel>
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </GroupBox>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Test Projesi Ekle/Sil">
            <StackPanel>
                <GroupBox Header="Test Projesi Ekle" >
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label VerticalAlignment="Top" Height="30" Content="Proje Adı:" />
                        <TextBox x:Name="txtProjName" Grid.Column="1" VerticalAlignment="Top"  VerticalContentAlignment="Center" Height="30"></TextBox>
                        <local:ImageButton Command="{Binding CommandAddNewTestProject}"
                                          CommandParameter="{Binding ElementName=txtProjName, Path=Text}" Margin="2,0,0,0" Grid.Column="2" VerticalAlignment="Top"  Width="30" Height="30" Source="img/add.png"></local:ImageButton>
                    </Grid>
                </GroupBox>
                <GroupBox Margin="0,10,0,0" Header="Test Projesi Sil" >
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label VerticalAlignment="Top" Height="30" Content="Proje Seç:" />
                        <ComboBox x:Name="cmbProjSil" Grid.Column="1" VerticalAlignment="Top"  VerticalContentAlignment="Center" Height="30" ItemsSource="{Binding TestProjects}" DisplayMemberPath="Caption"></ComboBox>
                        <local:ImageButton Command="{Binding CommandDeleteTestProject}" CommandParameter="{Binding ElementName=cmbProjSil, Path=SelectedItem}"  Margin="2,0,0,0" Grid.Column="2" VerticalAlignment="Top"  Width="30" Height="30" Source="img/close.png"></local:ImageButton>
                    </Grid>
                </GroupBox>

                <GroupBox Margin="0,10,0,0" Header="Test Projesi Güncelle" >
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label VerticalAlignment="Top" Height="30" Content="Proje Seç:" />
                        <ComboBox x:Name="cbmUpdateProj" Grid.Column="1" VerticalAlignment="Top"  VerticalContentAlignment="Center" Height="30" ItemsSource="{Binding TestProjects}" DisplayMemberPath="Caption"></ComboBox>
                        <Label Margin="0,10,0,0" Grid.Row="1" VerticalAlignment="Top" Height="30" Content="Proje Adı:" />
                        <TextBox Margin="0,10,0,0" Grid.Row="1" Grid.Column="1" VerticalAlignment="Top"  VerticalContentAlignment="Center" Height="30" Text="{Binding ElementName=cbmUpdateProj,Path=SelectedItem.Caption,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </TabItem>
    </TabControl>
</Window>
